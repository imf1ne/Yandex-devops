upstream backend {
      server 192.168.10.4:80;
      server 192.168.10.18:80;
}

proxy_cache_path /var/cache/nginx keys_zone=cache_zone:1m;

server {
    listen 80;
    listen [::]:80;
    server_name bingo.myddns.me;

    location /long_dummy {
       proxy_cache cache_zone;
       proxy_cache_valid 1m;
       proxy_pass http://backend;
    }

    location / {
       proxy_pass http://backend;
       proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 non_idempotent;
       proxy_intercept_errors on;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
      }
}

log_format quic '$remote_addr - $remote_user [$time_local] '
                '"$request" $status $body_bytes_sent '
                '"$http_referer" "$http_user_agent" "$http3"';

access_log logs/access.log quic;

server {
    listen 443 quic reuseport; # QUIC
    listen 443 ssl http2;      # TCP
    server_name bingo.myddns.me;
    add_header Alt-Svc 'h3=":443"; ma=3600';
    ssl_early_data on;
    ssl_certificate /etc/letsencrypt/live/bingo.myddns.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/bingo.myddns.me/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    location /long_dummy {
       proxy_cache cache_zone;
       proxy_cache_valid 1m;
       proxy_pass http://backend;
    }

    location / {
       add_header Alt-Svc 'h3=":$server_port"; ma=86400';
       add_header X-protocol $server_protocol always;
       proxy_pass http://backend;
       proxy_http_version 1.1;
       proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 non_idempotent;
       proxy_intercept_errors on;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
      }
}

server {
    listen 8080;
    # Optionally: allow access only from localhost
    # listen 127.0.0.1:8080;

    server_name bingo.myddns.me;

    location /status {
        stub_status;
    }
}